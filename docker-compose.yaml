version: "2.4"
networks:
  default:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1
        - subnet: fd15:555::/64
          gateway: fd15:555::1

services:
  reverse-proxy:
    image: traefik:v2.3
    restart: unless-stopped
    command:
      - --providers.docker
      - --entryPoints.web.address=:80
        #- --entrypoints.web.http.redirections.entryPoint.to=websecure
        #- --entrypoints.web.http.redirections.entryPoint.scheme=https
        #- --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=$ACME_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
        #- --api.insecure=true
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"
    depends_on:
      - back
      - front
      - maps
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ssl/:/letsencrypt/

  front:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./workadventure/front/dist:/usr/share/nginx/html
      - ./front/dist/resources:/usr/share/nginx/html/resources
      - ./front/dist/static:/usr/share/nginx/html/static
      - ./workadventure/front/nginx-vhost.conf:/etc/nginx/conf.d/default.conf
    labels:
      # Forward HTTP to HTTPs
      - "traefik.http.middlewares.front-https.redirectscheme.scheme=https"

      - "traefik.http.routers.front.rule=Host(`play.${BASE_DOMAIN}`)"
      - "traefik.http.routers.front.entryPoints=web"
      - "traefik.http.routers.front.middlewares=front-https"

      - "traefik.http.services.front.loadbalancer.server.port=8000"

      - "traefik.http.routers.front-ssl.rule=Host(`play.${BASE_DOMAIN}`)"
      - "traefik.http.routers.front-ssl.entryPoints=websecure"
      - "traefik.http.routers.front-ssl.tls=true"
      - "traefik.http.routers.front-ssl.tls.certresolver=letsencrypt"
      - "traefik.http.routers.front-ssl.service=front"
        #      - "traefik.http.routers.front.middlewares=auth"
        #      - "traefik.http.middlewares.auth.basicauth.users=$TRAEFIK_BASICAUTH"

  back:
    image: thecodingmachine/nodejs:12
    restart: unless-stopped
    command: yarn dev
    #command: yarn run profile
    environment:
      DEBUG: "*"
      STARTUP_COMMAND_1: yarn install
      SECRET_KEY: yourSecretKey
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ALLOW_ARTILLERY: "true"
      ADMIN_API_URL: "$ADMIN_API_URL"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
      MAX_PER_GROUP: $MAX_PER_GROUP
    volumes:
      - ./workadventure/back:/usr/src/app
    labels:
      - "traefik.enable=false"

  pusher:
    image: thecodingmachine/nodejs:12
    restart: unless-stopped
    command: yarn dev
    #command: yarn run prod
    #command: yarn run profile
    environment:
      DEBUG: "*"
      STARTUP_COMMAND_1: yarn install
      SECRET_KEY: yourSecretKey
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ADMIN_API_URL: "$ADMIN_API_URL"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      API_URL: back:50051
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
    volumes:
      - ./workadventure/pusher:/usr/src/app
    labels:
      - "traefik.http.routers.pusher.rule=Host(`pusher.${BASE_DOMAIN}`)"
      - "traefik.http.routers.pusher.entryPoints=web"
      - "traefik.http.services.pusher.loadbalancer.server.port=8080"
      - "traefik.http.routers.pusher-ssl.rule=Host(`pusher.${BASE_DOMAIN}`)"
      - "traefik.http.routers.pusher-ssl.entryPoints=websecure"
      - "traefik.http.routers.pusher-ssl.tls=true"
      - "traefik.http.routers.pusher-ssl.service=pusher"
      - "traefik.http.routers.pusher-ssl.tls.certresolver=letsencrypt"

  maps:
    image: nginx:alpine
    volumes:
      - ../cybercamp-maps:/usr/share/nginx/html
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.maps-https.redirectscheme.scheme=https"

      - "traefik.http.routers.maps.rule=Host(`maps.${BASE_DOMAIN}`)"
      - "traefik.http.routers.maps.entryPoints=web"
      - "traefik.http.routers.maps.middlewares=maps-https"

      # Serve maps via HTTPS, add CORS headers and gzip compression
      - "traefik.http.middlewares.maps-cors.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.maps-compress.compress=true"

      - "traefik.http.services.maps-ssl.loadbalancer.server.port=80"

      - "traefik.http.routers.maps-ssl.rule=Host(`maps.${BASE_DOMAIN}`)"
      - "traefik.http.routers.maps-ssl.entryPoints=websecure"
      - "traefik.http.routers.maps-ssl.tls=true"
      - "traefik.http.routers.maps-ssl.tls.certresolver=letsencrypt"
      - "traefik.http.routers.maps-ssl.middlewares=maps-cors,maps-compress"

  website:
    image: nginx:alpine
    volumes:
      - ./backoffice/default.conf:/etc/nginx/conf.d/default.conf
      - static:/static
    depends_on:
      - backoffice
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.website-https.redirectscheme.scheme=https"

      - "traefik.http.routers.website.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.website.entryPoints=web"
      - "traefik.http.routers.website.middlewares=website-https"

      # Serve website via HTTPS and gzip compression
      - "traefik.http.middlewares.website-compress.compress=true"

      - "traefik.http.services.website-ssl.loadbalancer.server.port=80"

      - "traefik.http.routers.website-ssl.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.website-ssl.entryPoints=websecure"
      - "traefik.http.routers.website-ssl.tls=true"
      - "traefik.http.routers.website-ssl.tls.certresolver=letsencrypt"
      - "traefik.http.routers.website-ssl.middlewares=website-compress"

  backoffice_db:
    image: postgres:13.2
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  backoffice:
    build: https://github.com/chschenk/cybercamp_backoffice.git#v0.8.0
    volumes:
      - static:/static
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_STATIC_ROOT=/static/
      - DJANGO_DB_HOST=backoffice_db
      - DJANGO_DB_BACKEND=postgresql
      - DJANGO_DB_NAME=${DB_NAME}
      - DJANGO_DB_USER=${DB_USER}
      - DJANGO_DB_PASSWORD=${DB_PASSWORD}
      - DJANGO_DB_PORT=5432
      - DJANGO_EMAIL_BACKEND=smtp
      - DJANGO_EMAIL_HOST=${DJANGO_EMAIL_HOST}
      - DJANGO_EMAIL_USER=${DJANGO_EMAIL_USER}
      - DJANGO_EMAIL_FROM=${DJANGO_EMAIL_FROM}
      - DJANGO_EMAIL_PASSWORD=${DJANGO_EMAIL_PASSWORD}
      - DJANGO_EMAIL_EMAIL_USE_TLS=${DJANGO_EMAIL_USE_TLS}
      - DJANGO_EMAIL_EMAIL_USE_SSL=${DJANGO_EMAIL_USE_SSL}
      - WORKADVENTURE_API_TOKEN=${ADMIN_API_TOKEN}
      - WORKADVENTURE_URL=https://play.${BASE_DOMAIN}/
    depends_on:
      - backoffice_db

volumes:
  static:
